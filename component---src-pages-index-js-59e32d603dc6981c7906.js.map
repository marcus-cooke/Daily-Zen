{"version":3,"file":"component---src-pages-index-js-59e32d603dc6981c7906.js","mappings":"gLAmBA,MAjBqBA,IAAgB,IAAf,MAAEC,GAAOD,EAC7B,OACEE,EAAAA,cAAA,OAAKC,UAAU,iDACbD,EAAAA,cAAA,OAAKC,UAAU,uHACbD,EAAAA,cAAA,cAAYC,UAAU,gFACpBD,EAAAA,cAAA,QAAMC,UAAU,8EAA6E,KAC7FD,EAAAA,cAAA,QAAMC,UAAU,kBAAkBF,EAAMG,MACxCF,EAAAA,cAAA,QAAMC,UAAU,8EAA6E,MAE/FD,EAAAA,cAAA,KAAGC,UAAU,4EAA2E,KACnFF,EAAMI,SAGT,EC+BV,MAzCkBL,IAAe,IAAd,KAAEM,GAAMN,EAEzB,MAAMO,EAAYD,EAAKE,SAASC,OAG1BC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWN,EAAUO,QACnDC,EAAcR,EAAUG,GAGxBM,EAAoB,CACxBZ,KAAMW,EAAYX,KAClBC,OAAQU,EAAYV,OACpBY,SAAU,SACVC,MAAM,IAAIC,MAAOC,cACjBC,GAAI,SAASX,IACbY,OAAQ,IAGV,OACEpB,EAAAA,cAACqB,EAAAA,EAAM,CACLC,MAAM,oBACNC,YAAY,8DAEZvB,EAAAA,cAAA,OAAKC,UAAU,iCACZY,GAAeb,EAAAA,cAACwB,EAAY,CAACzB,MAAOe,KAEhC,C","sources":["webpack://daily-zen/./src/components/QuoteDisplay.js","webpack://daily-zen/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\n\nconst QuoteDisplay = ({ quote }) => {\n  return (\n    <div className=\"flex items-center justify-center min-h-screen\">\n      <div className=\"bg-light dark:bg-background-dark rounded-lg p-10 my-8 transition-all duration-300 hover:shadow-lg max-w-2xl mx-auto\">\n        <blockquote className=\"text-2xl font-light leading-relaxed mb-8 text-text-light dark:text-text-dark\">\n          <span className=\"text-primary-light dark:text-primary-dark leading-none font-serif text-4xl\">\"</span>\n          <span className=\"pl-1 font-bold\">{quote.text}</span>\n          <span className=\"text-primary-light dark:text-primary-dark leading-none font-serif text-4xl\">\"</span>\n        </blockquote>\n        <p className=\"text-lg font-medium text-right text-primary-light dark:text-primary-dark\">\n          â€” {quote.author}\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default QuoteDisplay ","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport QuoteDisplay from \"../components/QuoteDisplay\"\n\nconst IndexPage = ({ data }) => {\n  // Get all quotes from the quoteSample.json file\n  const allQuotes = data.dataJson.quotes\n  \n  // Select a random quote\n  const randomIndex = Math.floor(Math.random() * allQuotes.length)\n  const randomQuote = allQuotes[randomIndex]\n  \n  // Add required fields for QuoteDisplay component\n  const quoteWithDefaults = {\n    text: randomQuote.text,\n    author: randomQuote.author,\n    category: \"Wisdom\",\n    date: new Date().toISOString(),\n    id: `quote-${randomIndex}`,\n    source: \"\"\n  }\n  \n  return (\n    <Layout \n      title=\"Daily Inspiration\"\n      description=\"Get your daily dose of inspiration with thoughtful quotes.\"\n    >\n      <div className=\"text-center max-w-3xl mx-auto\">\n        {randomQuote && <QuoteDisplay quote={quoteWithDefaults} />}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    dataJson {\n      quotes {\n        author\n        text\n      }\n    }\n  }\n`\n\nexport default IndexPage "],"names":["_ref","quote","React","className","text","author","data","allQuotes","dataJson","quotes","randomIndex","Math","floor","random","length","randomQuote","quoteWithDefaults","category","date","Date","toISOString","id","source","Layout","title","description","QuoteDisplay"],"sourceRoot":""}